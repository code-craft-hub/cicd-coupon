# Generated by Django 5.1.7 on 2025-03-24 08:10

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
import storages.backends.s3
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the discount category.', max_length=255, unique=True)),
                ('image', models.FileField(blank=True, help_text='Image representing the category, stored in S3 (supports SVG).', null=True, storage=storages.backends.s3.S3Storage(), upload_to='categories/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'svg'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Retailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the retailer.', max_length=255, unique=True)),
                ('contact_info', models.TextField(blank=True, help_text='Contact details of the retailer.', null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='Geographic location of the retailer (latitude/longitude).', srid=4326)),
                ('analytics_data', models.JSONField(blank=True, default=dict, help_text='Analytics data for the retailer.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the retailer was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the retailer was last updated.')),
                ('owner', models.ForeignKey(blank=True, help_text='User who owns/manages this retailer.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retailers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('discount_code', models.CharField(max_length=50, unique=True)),
                ('discount_value', models.DecimalField(decimal_places=2, default=0.0, help_text='Value of the discount (e.g., amount or percentage).', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the discount is currently active.')),
                ('expiration_date', models.DateTimeField(help_text='Expiration date of the discount.')),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='Geographic location where the discount is valid (latitude/longitude).', srid=4326)),
                ('image', models.FileField(blank=True, help_text='Optional image representing the discount, stored in S3 (supports SVG).', null=True, storage=storages.backends.s3.S3Storage(), upload_to='discounts/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'svg'])])),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the discount was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the discount was last updated.')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='discounts', to='geodiscounts.category')),
                ('retailer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='geodiscounts.retailer')),
            ],
        ),
        migrations.CreateModel(
            name='SharedDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(help_text='Name of the group sharing the discount.', max_length=255)),
                ('participants', models.JSONField(help_text='List of participant user IDs sharing the discount.')),
                ('min_participants', models.PositiveIntegerField(default=2, help_text='Minimum number of participants required for the shared discount.')),
                ('max_participants', models.PositiveIntegerField(default=10, help_text='Maximum number of participants allowed in the shared discount.')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('expired', 'Expired')], default='active', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the shared discount was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the shared discount was last updated.')),
                ('discount', models.ForeignKey(help_text='Discount being shared.', on_delete=django.db.models.deletion.CASCADE, related_name='shared_discounts', to='geodiscounts.discount')),
            ],
        ),
    ]
